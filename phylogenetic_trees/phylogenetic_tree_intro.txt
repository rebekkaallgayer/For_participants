## clear the r environment
rm(list = ls(all.names = TRUE))

### installing packages
install.packages("ape")
install.packages("DDD")
install.packages("geiger")
install.packages("phytools")
install.packages("RPANDA")

## troubleshooting... might need to specify to install dependencies
install.packages("package name", dependencies = TRUE)

### loading packages
library(ape)
library(DDD)
library(geiger)
library(RPANDA)
library(phytools)
#library(terra)
#library(fBasics)

### set your working directory 
setwd("C:/Users/poppy/Desktop/indonesia/R")

### load your tree
tree1 <- read.tree("cetacea.tre")

### check the details
tree1
Ntip(tree1)

### plot your tree
plotTree(tree1,offset=1)

### make the labels fit better
plotTree(tree1,ftype="i",fsize=0.4,lwd=1)

### same tree as a fan tree
plotTree(tree1,type="fan",fsize=0.6,lwd=1, ftype="i")

############################################################

### looking at a genus: Mesoplodon
Mes_species<-c("bidens", "traversi", "ginkgodens", "europaeus", "mirus", "bowdoini", "carlhubbsi", "layardii", "Mesoplodon_hectori", "densirostris", "stejnegeri", "grayi", "perrini", "peruvianus")
ii<-sapply(Mes_species,grep,tree1$tip.label)
ii

Mes_species<-tree1$tip.label[ii]
Mes_species

### extract that clade
node<-fastMRCA(tree1,"Mesoplodon_bidens",
    "Mesoplodon_peruvianus")
Mes_clade<-extract.clade(tree1,node)

plotTree(Mes_clade,ftype="i")

### or prune everything in the tree except that clade
Mes_tree<-drop.tip(tree1,
    setdiff(tree1$tip.label,Mes_species))

### plot the clade
plotTree(Mes_tree,ftype="i")

##################################################################

### adding images to a tree using the Anolis example in phytools
### http://phytools.org/mexico2018/ex/12/Plotting-methods.html

install.packages("png")
library(png)

## load the data
anole.tree <- read.tree("Anolis.tre")
anole.data<-read.csv("anole.data.csv",header=TRUE,row.names=1)

## set up things
svl<-setNames(anole.data[,1],rownames(anole.data))
obj<-contMap(anole.tree,svl,plot=FALSE)
obj<-setMap(obj,invert=TRUE)

## plot the tree with trait data
plot(obj,fsize=c(0.4,1),outline=FALSE,lwd=c(3,7),leg.txt="log(SVL)")

## plot as a fan tree
plot(obj,type="fan",outline=FALSE,fsize=c(0.6,1),legend=1,
  lwd=c(4,8),xlim=c(-1.8,1.8),leg.txt="log(SVL)")
    
## plot just the tree, no trait data
plotTree(anole.tree,type="fan",fsize=0.6,lwd=1, ftype="i")

## list of species to add images
spp<-c("barbatus","porcatus","cristatellus","equestris","sagrei")

## add the images to the tree
w<-0.5
obj <- anole.tree

for(i in 1:length(spp)){
    xy<-add.arrow(obj,spp[i],col="transparent",arrl=0.45,lwd=3,hedl=0.1)
    arrl<-if(spp[i]%in%c("sagrei","porcatus")) 0.24 
        else if(spp[i]=="barbatus") 0.2 else 0.34
    add.arrow(obj,spp[i],col="blue",arrl=arrl,lwd=3,hedl=0.05)
    img<-readPNG(source=paste(spp[i],".png",sep=""))
    asp<-dim(img)[1]/dim(img)[2]
    rasterImage(img,xy$x0-w/2,xy$y0-w/2*asp,xy$x0+w/2,xy$y0+w/2*asp)
}

######################################################################

### Trees and trait data
### The code for the following trees have been adapted from Liam J. Revell


## clear the r environment
rm(list = ls(all.names = TRUE))


#### discreet trait data ##########################

### load the tree
bird.tree <- read.nexus("hummingbird.nex")

### load the data
trait.data <- read.csv("traits_redblue.csv",row.names=1)

### plot the tree
plotTree(bird.tree,ftype="i",fsize=0.6,lwd=1)

### add the trait data to the tree and plot it

fmode<-as.factor(setNames(trait.data[,1],rownames(trait.data)))

dotTree(bird.tree,fmode,colors=setNames(c("red","blue"),
                                        c("1","2")),ftype="i",fsize=0.5, lwd=1)
                                        

#### lets look at a clade from that tree

install.packages("dplyr")
library(dplyr)

## select the clade
node<-fastMRCA(bird.tree,"Eupherusa_eximia",
    "Damophila_julie")
clade<-extract.clade(bird.tree,node)

## plot the clade
plotTree(clade,ftype="i")

## select the clade species trait data
clade.species <- data.frame(c(clade$tip.label)) 
clade.sp.list<-setNames(clade.species[,1],rownames(clade.species))
clade.data <- trait.data[clade.sp.list,]
clade.traits <- data.frame(clade.data, row.names = clade.sp.list)

## plot the clade and trait data
fmode<-as.factor(setNames(clade.traits[,1],rownames(clade.traits)))

dotTree(clade,fmode,colors=setNames(c("red","blue"),
                                        c("1","2")),ftype="i",fsize=0.5, lwd=1)
                                        
                                        
## make.simmap is sampling character histories conditioned on the transition matrix
bird.trees<-make.simmap(bird.tree,fmode,nsim=100)

obj<-densityMap(bird.trees,states=c("1","2"),plot=FALSE)

plot(obj,lwd=2,outline=TRUE,fsize=c(0.5,0.5),legend=7)


### multiple discreet trait states #############################
#stochastic character mapping, in which dicrete character histories are #sampled from their posterior probability distribution.

## load the data
bird.regions<-read.csv("humm_geo_distribution.csv",row.names=1)
bird.regions<-setNames(bird.regions[,1],rownames(bird.regions))

### set your colours linked to trait state
cols2<-setNames(c("green","red","blue",
    "orange","purple","pink"),
    c("A","B","C","AB","BC","ABC"))

## simulate the stochastic character mapping
sim.tree <- make.simmap(bird.tree, bird.regions, model="SYM", nsim=1)
# the simulation will take some time

### plot as a regular tree
plotSimmap(sim.tree, colors = cols2, fsize=0.7, ftype="reg", lwd=2, pts=FALSE, 
	node.numbers=FALSE, mar=NULL, add=FALSE, offset=NULL, direction="rightwards", type="phylogram", setEnv=TRUE, part=1.0, xlim=NULL, ylim=NULL, nodes="intermediate", tips=NULL, maxY=NULL, hold=TRUE)
	
add.simmap.legend(colors=cols2,x=0.9*par()$usr[1],
    y=0.9*par()$usr[4],prompt=FALSE,fsize=0.9)

### plot as a fan tree
plot(sim.tree,cols2,type="fan",fsize=0.4,lwd=3,ftype="i")
add.simmap.legend(colors=cols2,x=0.9*par()$usr[1],
    y=0.9*par()$usr[4],prompt=FALSE,fsize=0.9)
    

###################
#Here's an example in which we first do stochastic mapping
#then we plot the posterior probabilities that each node is in each state.

sim.tree2 <- make.simmap(bird.tree, bird.regions, model="ER", nsim=100)

obj<-summary(sim.tree2,plot=FALSE)

##as a fan tree
plot(obj,colors=cols2,type="fan",lwd=1,fsize=0.4,cex=c(0.3,0.1))

##as a regular tree
plot(obj,colors=cols2,lwd=1,fsize=0.4,cex=c(0.4,0.2))

#ldw adjusts the line widths
#fsize adjusts the font size
#cex ajdusts the pie chart size

add.simmap.legend(colors=cols2,x=0.9*par()$usr[1],
    y=0.9*par()$usr[4],prompt=FALSE,fsize=0.8)
    
# x and y adjust the size and location of the ledgend
    
#####################

## ARD plot to show 

fit.ARD<-fitMk(sim.tree,bird.regions,model="ARD")
plot(fit.ARD,main="fitted ARD model for eco-region evolution")
plot(fit.ARD,show.zeros=FALSE,main="fitted ARD model for eco-region evolution")


#############################

## continuous characters

## clear the r environment
rm(list = ls(all.names = TRUE))

## load the data
anole.tree <- read.tree("Anolis.tre")
anole.data<-read.csv("anole.data.csv",header=TRUE,row.names=1)

## plot the tree
plotTree(anole.tree, lwd = 0.5, fsize = 0.6)

### select a clade #####
node<-fastMRCA(anole.tree,"lucius",
    "altitudinalis")
clade<-extract.clade(anole.tree,node)

## plot the clade
plotTree(clade,ftype="i")

## select the clade species trait data
clade.species <- data.frame(c(clade$tip.label)) 
clade.sp.list<-setNames(clade.species[,1],rownames(clade.species))
clade.data <- anole.data[clade.sp.list,]
clade.traits <- data.frame(clade.data, row.names = clade.sp.list)

x <- clade.traits

#### dot tree with multiple continuous traits

dotTree(clade,x,fsize=0.4, legend = FALSE, 
    standardize=FALSE,length=10)
    
## heat map with multiple continuous traits
phylo.heatmap(clade,x,lwd=1,standardize=TRUE,fsize=0.35)

#################################

## tree with different width branch lengths ####

lnSVL<-setNames(log(clade.data$SVL),
    rownames(clade.data))
h<-max(nodeHeights(clade))
## this is the number of unbranching nodes
## that I'm going to add along any path from
## the root to any tip
n<-100
LL<-setNames(seq(0,h,length.out=n),1:n)
tmp<-make.era.map(clade,LL)
clade<-map.to.singleton(tmp)
a<-fastAnc(clade,lnSVL)
node.values<-c(lnSVL[clade$tip.label],a)
edge.values<-apply(clade$edge,1,function(e,nv)
    mean(nv[e]),nv=node.values)
edge.widths<-edge.values-min(edge.values)
edge.widths<-edge.widths*(9/max(edge.widths)) #+1
par(lend=1)
plot(clade,no.margin=TRUE,cex=0.5,edge.width=edge.widths,
    label.offset=0,edge.col="darkgrey")
leg.length<-30
nsegs<-20
segments(x0=seq(0,(1-1/nsegs)*leg.length,length.out=nsegs),
    y0=rep(Ntip(clade),nsegs),
    x1=seq(1/nsegs*leg.length,leg.length,length.out=nsegs),
    y1=rep(Ntip(clade),nsegs),
    lwd=seq(1,10,length.out=nsegs),col="darkgrey")
text(0,Ntip(clade),round(min(edge.values),2),pos=1,
    cex=0.8)
text(leg.length,Ntip(clade),round(max(edge.values),2),
    pos=1,cex=0.8)
text(leg.length/2,Ntip(clade),"log(body size kg)",
    pos=1,cex=0.8)


###############################
